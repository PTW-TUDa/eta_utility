[metadata]
name = eta_utility
version = 1.3
author = Technical University of Darmstadt, Institute for Production Management, Technology and Machine Tools (PTW).
author_email = info@ptw.tu-darmstadt.de
url = eta-fabrik.de
description = ETA-Fabrik utility functions for connections, servers and simulations
long_description = file: README.md, LICENSE
keywords = utility functions, connectors, servers, simulators
license = BSD 2-Clause License
license_file = LICENSE
classifiers =
    License :: OSI Approved :: BSD License
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Manufacturing
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Libraries
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
include_package_data = True
packages = find:
# We're using some functionality from python 3.7 (therefore this is the minimum)
# and pytorch does not support Versions >3.8 (therefore this is the maximum).
python_requires = >=3.7<=3.8
install_requires =
    opcua
    cryptography
    attrs
    numpy
    pandas
    xlrd
    requests
    lxml
    # Lower versions of fmpy have problems with setting parameters during initialization:
    fmpy>=0.3.5
    python-dateutil
    pyModbusTCP
    nptyping

[options.extras_require]
ETA_X =
    gym
    torch
    stable_baselines3
    tensorboard
    pyomo<6
    mmh3

DEVELOP =
    # Repeat requirements from ETA_X
    gym
    torch
    stable_baselines3
    tensorboard
    # The MPCBasic agent currently does not support pyomo version 6:
    pyomo<6
    mmh3
    # Specific requirements for development
    sphinx
    sphinx_rtd_theme
    pre-commit
    pytest
    pytest-cov
    black
    blacken-docs
    isort
    pyupgrade
    # MyPy requirements and typing packages
    mypy
    types-python-dateutil
    types-requests
    # Linting / Flake8 requirements and linting packages
    flake8
    pyflakes
    pycodestyle
    flake8-builtins
    flake8-eradicate
    flake8-comprehensions
    flake8-mutable
    flake8-print
    flake8-pytest-style
    flake8-requirements
    pep8-naming
    flake8-rst-docstrings
    # Could be inserted as a future requirement
    # flake8-simplify

[options.package_data]
* = *.md


[options.packages.find]
include =
    eta_utilit*
exclude =
    test*

[flake8]
format = default
show_source = true
extend_exclude =
    docs/conf.py,
    build,
    dist
max_line_length = 120
indent_size = 4
extend_ignore =
    E203
    W503
    D203
    # Some ReST keywords are specific to sphinx and will not be recognized correctly:
    RST304
    # Warnings about fixtures without return values are broken:
    PT019
per_file_ignores =
    __init__.py: F401
max_complexity = 20
